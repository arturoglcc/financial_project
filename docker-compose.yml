version: '3.8'

services:

  db:
    build:
      context: .
      dockerfile: docker/Dockerfile.db
    container_name: db
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./backend:/app
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u ${MYSQL_USER} -p${MYSQL_PASSWORD}"]
      interval: 10s
      timeout: 1s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    container_name: backend
    ports:
      - "8000:8000"
    expose:
      - "8000"
    depends_on:
      db:
       condition: service_healthy 
    env_file:
      - .env
    environment:
      DB_HOST: db                   
      DB_PORT: 3306
      DB_NAME: ${MYSQL_DATABASE}
      DB_USER: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_PASSWORD}
      SECRET_KEY: ${SECRET_KEY}
    networks:
        - app-network


  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    container_name: frontend
    ports:
      - "8080:8080"
    networks:
      - app-network

  http:
    build:
      context: ./
      dockerfile: docker/Dockerfile.http
    container_name: http
    ports:
      - "80:80" 
    depends_on:
      - backend
    networks:
      - app-network


volumes:
  db_data:

networks:
  app-network:
    driver: bridge
